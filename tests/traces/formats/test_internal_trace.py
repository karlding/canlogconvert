import unittest
from canlogconvert.traces.formats.trc import load_string

from canlogconvert.traces.formats.internal_trace import InternalTrace
from canlogconvert.traces.formats.internal_trace import InternalMessage
from canlogconvert.traces.formats.internal_trace import InternalMessageDirection


class TestInternalTrace(unittest.TestCase):
    def test_as_trc_string(self):
        messages = []
        messages.append(
            InternalMessage(
                arbitration_id=0x401,
                data=bytearray([0x0A, 0x00, 0x66, 0x98, 0x0B, 0x00]),
                dlc=6,
                direction=InternalMessageDirection.RX,
                timestamp=0,
            )
        )
        messages.append(
            InternalMessage(
                arbitration_id=0x4A7,
                data=bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),
                dlc=8,
                direction=InternalMessageDirection.RX,
                timestamp=0,
            )
        )
        internal_trace = InternalTrace(messages=messages, start_timestamp=0)

        expected = """\
;$FILEVERSION=2.1
;$STARTTIME=43589.1
;$COLUMNS=N,O,T,B,I,d,R,L,D
;
;   C:\Temp\\2019-01-09_18-34-16_844.trc
;   Start time: 2019-01-09 18:34:16.883.5
;   Generated by PCAN-Explorer v6.2.1.1946
;-------------------------------------------------------------------------------
;   Bus  Connection   Net Connection     Protocol  Bit rate
;   1    Connection1  Untitled@pcan_usb  CAN       500 kBit/s
;-------------------------------------------------------------------------------
;   Message    Time    Type    ID     Rx/Tx
;   Number     Offset  |  Bus  [hex]  |  Reserved
;   |          [ms]    |  |    |      |  |  Data Length Code
;   |          |       |  |    |      |  |  |    Data [hex] ...
;   |          |       |  |    |      |  |  |    |
;---+--- ------+------ +- +- --+----- +- +- +--- +- -- -- -- -- -- -- --
       1             0 DT 1      0401 Rx -  6    0A 00 66 98 0B 00
       2             0 DT 1      04A7 Rx -  8    00 00 00 00 00 00 00 00"""
        self.maxDiff = None
        self.assertEqual(expected, internal_trace.as_trc_string())
